ngless "1.5"
import "parallel" version "1.1"

SH_DOGS_MAGS = '../../intermediate-outputs/Coelho_2018_mappings/ShanghaiDogsMAGs.fna.gz'
DOG_GENOME = '../../external-data/data/dog_genome/GCA_000002285.4_Dog10K_Boxer_Tasha_genomic.fna'

DATA_BASEDIR = '../../external-data/data/Coelho_dogs_2018/'


sample = run_for_all(readlines(DATA_BASEDIR </> 'PRJEB20308'))
input = load_fastq_directory(DATA_BASEDIR </> sample)
input = preprocess(input) using |read|:
    read = substrim(read, min_quality=25)
    if len(read) < 45:
        discard

mapped = map(input, fafile=DOG_GENOME)

mapped = select(mapped) using |mr|:
    mr = mr.filter(min_match_size=45, min_identity_pc=90, action={unmatch})
    if mr.flag({mapped}):
        discard

write(mapstats(mapped),
    ofile='outputs' </> sample + '_dog_mapstats.txt')

input = as_reads(mapped)
mapped = map(input, fafile=SH_DOGS_MAGS)

mapped = select(mapped) using |mr|:
    mr = mr.filter(min_match_size=45, min_identity_pc=90, action={unmatch})

write(mapstats(mapped),
    ofile='outputs' </> sample + '_shd_mapstats.txt')

write(qcstats({fastq}),
    ofile='outputs' </> sample + '_fqstats.txt')
write(qcstats({mapping}),
    ofile='outputs' </> sample + '_qcstats.txt')
